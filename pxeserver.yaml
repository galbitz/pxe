---
- name: deploy
  hosts: all
  gather_facts: false
  become: true
  pre_tasks:
    - name: update repositories
      apt: update_cache=yes
      changed_when: False
  tasks:
    - name: Install packages
      apt: 
        name: ['htop', 'tmux', 'net-tools', 'pxelinux', 'syslinux', 'dnsmasq']

    - name: Move original dnmasq
      command: mv /etc/dnsmasq.conf /etc/dnsmasq.conf.orig
      args:
        removes: /etc/dnsmasq.conf
        creates: /etc/dnsmasq.conf.orig

    - name: Creating tftproot
      file:
        path: "/tftpboot/pxelinux.cfg"
        state: directory

    - name: Create dnsmasq
      copy: src=files/dnsmasq.conf dest=/etc/dnsmasq.conf
      notify: restart_dnsmasq

    - name: update dnsmasq default config
      lineinfile:
        path: /etc/default/dnsmasq
        regexp: '^DNSMASQ_EXCEPT='
        line: 'DNSMASQ_EXCEPT=lo'
      notify: restart_dnsmasq

    - name: Copy PXE boot files
      copy:
        src: '{{item.src}}'
        dest: '{{item.dest}}'
        remote_src: yes
      loop:
        - { src: '/usr/lib/PXELINUX/pxelinux.0', dest: '/tftpboot/'}
        - { src: '/usr/lib/syslinux/modules/bios/ldlinux.c32', dest: '/tftpboot/'}
        - { src: '/usr/lib/syslinux/modules/bios/libmenu.c32', dest: '/tftpboot/'}
        - { src: '/usr/lib/syslinux/modules/bios/libutil.c32', dest: '/tftpboot/'}
        - { src: '/usr/lib/syslinux/modules/bios/menu.c32', dest: '/tftpboot/'}

    - name: Create pxe config
      copy: src=files/pxedefault.conf dest=/tftpboot/pxelinux.cfg/default

    - name: Creating temp dir for netboot
      file:
        path: "/tmp/netboot/2004"
        state: directory
    
    - name: Check if netboot has been downloaded
      stat:
        path: /tmp/netboot/netboot.tar.gz
      register: netboot_file

    - name: Download netboot zip
      get_url:
        url: http://archive.ubuntu.com/ubuntu/ubuntu/dists/focal/main/installer-amd64/current/legacy-images/netboot/netboot.tar.gz
        dest: /tmp/netboot/
      when: netboot_file.stat.exists == false

    - name: Extract netboot
      unarchive:
        src: /tmp/netboot/netboot.tar.gz
        dest: /tmp/netboot/2004
        remote_src: yes
    
    - name: Create tftpboot linux dir
      file:
        path: "/tftpboot/2004"
        state: directory

    - name: Copy PXE linux install files
      copy:
        src: '{{item.src}}'
        dest: '{{item.dest}}'
        remote_src: yes
      loop:
        - { src: '/tmp/netboot/2004/ubuntu-installer/amd64/linux', dest: '/tftpboot/2004/'}
        - { src: '/tmp/netboot/2004/ubuntu-installer/amd64/initrd.gz', dest: '/tftpboot/2004/'}

    - name: Creating temp dir for clonezilla
      file:
        path: "/tmp/clonezilla"
        state: directory

    - name: Check if clonezilla has been downloaded
      stat:
        path: /tmp/clonezilla/clonezilla.iso
      register: clonezilla_file

    - name: Download clonezilla
      get_url:
        url: https://versaweb.dl.sourceforge.net/project/clonezilla/clonezilla_live_alternative/20210817-hirsute/clonezilla-live-20210817-hirsute-amd64.iso
        dest: /tmp/clonezilla/clonezilla.iso
      when: clonezilla_file.stat.exists == false

    - name: Create tftpboot clonezilla dir
      file:
        path: "/tftpboot/clonezilla"
        state: directory
    
    - name: Extract clonezilla files to tftpboot
      iso_extract:
        image: /tmp/clonezilla/clonezilla.iso
        dest: /tftpboot/clonezilla/
        files:
        - live/vmlinuz
        - live/initrd.img
        - live/filesystem.squashfs


  handlers:
    - name: restart_dnsmasq
      service:
        name: dnsmasq.service
        state: restarted
